from bot.data.config import dp, bot, ADMINS
from bot.set_default_commands import set_default_commands
from aiogram import types
from bot.keyboards import kb_resume, kb_yes_no
from bot import anket
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.dispatcher import FSMContext
import mysql.connector
import datetime
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


@dp.message_handler(commands="start")
async def start(message: types.Message):
    global user_id
    await bot.send_message(text=" –í—ñ—Ç–∞—î–º–æ –≤–∞—Å —É –Ω–∞—à–æ–º—É –±–æ—Ç—ñ –¥–ª—è –∑–∞—è–≤–∫–∏ –Ω–∞ —Ä–æ–±–æ—Ç—É! üåü "
                                "\n–¢—É—Ç –≤–∏ –∑–º–æ–∂–µ—Ç–µ –ª–µ–≥–∫–æ —ñ —à–≤–∏–¥–∫–æ –ø–æ–¥–∞—Ç–∏ –∑–∞—è–≤–∫—É –Ω–∞ —Ü—ñ–∫–∞–≤—É –≤–∞–∫–∞–Ω—Å—ñ—é –∞–±–æ —Ä–æ–∑–º—ñ—Å—Ç–∏—Ç–∏ —Å–≤–æ—î —Ä–µ–∑—é–º–µ. "
                                "\n–ü—Ä–æ—Å—Ç–æ –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –ø—É–Ω–∫—Ç–∏ —è–∫—ñ –Ω–∞–≤–µ–¥–µ–Ω—ñ –Ω–∏–∂—á–µ, –≤–≤–µ–¥—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /confirm - –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω–∏—Ö, "
                                "\n–ø–æ—Ç—ñ–º –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ —Ä–µ–∑—é–º–µ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É –∑ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–æ–º–∞–Ω–¥–∏ /send_survey ", chat_id=message.from_user.id,  reply_markup=kb_resume)
    user_id = message.from_user.id

class ApplyStatesGroup(StatesGroup):
    apply = State()
    date = State()


def generate_keyboard_days():
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    today = datetime.date.today()
    for i in range(7):
        date = today + datetime.timedelta(days=i)
        date_str = date.strftime("%d.%m")
        callback_data = f"date_{date.strftime('%Y-%m-%d')}"
        keyboard.add(types.InlineKeyboardButton(text=date_str, callback_data=callback_data))
    return keyboard


user_id = ""


@dp.message_handler(commands='send_survey')
async def send_photo_to_admin(message: types.Message):
    global user_id
    user_id = message.from_user.id
    with open('anketa.png', 'rb') as photo:
        await bot.send_photo(chat_id=ADMINS, photo=photo, caption="–ü—Ä–∏–π–Ω—è—Ç–∏?", reply_markup=kb_yes_no)
    await ApplyStatesGroup.apply.set()


@dp.callback_query_handler(text="apply_callabck", state=ApplyStatesGroup.apply)
async def apply(message: types.Message):
    await bot.send_message(chat_id=ADMINS, text="–ù–∞–∑–Ω–∞—á—Ç–µ –¥–∞—Ç—É –Ω–∞ —Å–ø—ñ–≤–±–µ—Å—ñ–¥—É: ", reply_markup=generate_keyboard_days())
    await ApplyStatesGroup.next()


@dp.callback_query_handler(lambda c: c.data.startswith('date_'), state=ApplyStatesGroup.date)
async def apply_date(callback_query: types.CallbackQuery, state: FSMContext):
    selected_date = callback_query.data.replace('date_', '')
    await bot.send_message(user_id, f"–í–∞—Å –∑–∞–ø—Ä–æ—Å–∏–ª–∏ –Ω–∞ —Å–ø—ñ–≤–±–µ—ñ—Å–¥—É –æ {selected_date} –Ω–∞ 10 –≥–æ–¥–∏–Ω —Ä–∞–Ω–∫—É –Ω–∞ /—Ç–∏–ø—É —ñ–º'—è –≤—É–ª–∏—Ü—ñ/")
    await state.reset_state()


@dp.callback_query_handler(text="reject_callback", state=ApplyStatesGroup.apply)
async def reject(message: types.Message, state: FSMContext):
    await bot.send_message(chat_id=user_id, text="–í–∏–±–∞—á–∞–π—Ç–µ, –≤–∞—Å –Ω–µ –ø—Ä–∏–π–Ω—è–ª–∏ –Ω–∞ —Ä–æ–±–æ—Ç—É")


@dp.message_handler(commands="help")
async def help(message: types.Message):
    await bot.send_message(text="–¶–µ–π –±–æ—Ç –¥–æ–ø–æ–º–æ–∂–µ –Ω–∞–º –≤—ñ–¥—ñ–±—Ä–∞—Ç–∏ –Ω–∞–π–∫—Ä–∞—â–∏—Ö –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫—ñ–≤ —É —Å–≤–æ—ó–π —Å—Ñ–µ—Ä—ñ, –º–æ–∂–µ –≤–∏ —ñ —î –æ–¥–∏–Ω –∑ –Ω–∏—Ö! –ó–∞–ø–æ–≤–Ω—ñ—Ç—å –∞–Ω–∫–µ—Ç—É —ñ —á–µ–∫–∞–π—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –ø–æ–∫–∏ –≤–∞—Å –Ω–µ –∑–∞–ø—Ä–æ—Å—è—Ç—å –Ω–∞ —Å–ø—ñ–≤–±–µ—Å—ñ–¥—É."
"\n–ö–æ–º–∞–Ω–¥–∏ –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –≤–≤—ñ–≤ –≤ —á–∞—Ç /", chat_id=message.from_user.id)


async def on_startup(dispatcher):
    await set_default_commands(dispatcher)

if __name__ == '__main__':
    from aiogram import executor
    from aiogram.types import ParseMode, InlineKeyboardButton

    executor.start_polling(dp, on_startup=on_startup, skip_updates=True)



